@page "/weeklyforecast"
@using Data
@inject WeatherForecastService WeatherService
<h3>WeeklyForecast</h3>


@inject IJSRuntime js
<div class="alert alert-info my-2">
    Click here to switch themes
    <button @onclick="SwapTheme" Primary="true">@SetThemeName Mode</button>
</div>

            @*@foreach (var item in Enumerable.Range(1, 5))*@
            @if (forecasts == null)
            {
                <span>No Data</span>
            }
            else
            {
                foreach (var forecast in forecasts)
                {
                    <WeatherDay TemperatureC="forecast.TemperatureC"
                                Summary="@forecast.Summary"
                                DayOfWeek="forecast.Date.DayOfWeek"
                                OnSelected="@HandleItemSelected"
                                Selected="forecast.Selected">
                        <CustomMessage>
                            @if (forecast.Summary == "Rainy")
                            {
                                <div class="alert alert-danger">
                                    Tornado Warning!
                                </div>
                            }
                        </CustomMessage>
                    </WeatherDay>
                }
            }

            @code {

                WeatherForecast[] forecasts;

                protected override async Task OnInitializedAsync()
                {
                    forecasts = await WeatherService.GetForecastAsync(DateTime.Now);
                }
                void HandleItemSelected(DayOfWeek selectedValue)
                {
                    // Clear selections
                    foreach (var item in forecasts)
                        item.Selected = false;
                    forecasts.First(f => f.Date.DayOfWeek == selectedValue).Selected = true;
                }

                bool isDark;
                string SetThemeName => isDark ? "Dark" : "Light";
                async Task SwapTheme()
                {
                    Console.WriteLine("helloi");
                    isDark = !isDark;
                    await js.InvokeVoidAsync("themeChooser.setTheme", SetThemeName);
                }

            }
